main = t1 <- store (CInt 1)
       t2 <- store (CInt 10000)
       t3 <- store (Fupto t1 t2)
       t4 <- store (Fsum t3)
       (CInt r') <- eval t4
       intPrint r'

upto m n = (CInt m') <- eval m
           (CInt n') <- eval n
           b' <- intGT m' n'
           if b' then
            return (CNil)
           else
            m1' <- intAdd m' 1
            m1 <- store (CInt m1')
            p <- store (Fupto m1 n)
            return (CCons m p)

sum l = l2 <- eval l
        case l2 of
          (CNil)       -> return (CInt 0)
          (CCons x xs) -> (CInt x') <- eval x
                          (CInt s') <- sum xs
                          ax' <- intAdd x' s'
                          return (CInt ax')

eval q = v <- fetch q
         case v of
          (CInt x'1)    -> return v
          (CNil)        -> return v
          (CCons y ys)  -> return v
          (Fupto a b)   -> w <- upto a b
                           update q w
                           return w
          (Fsum c)      -> z <- sum c
                           update q z
                           return z
