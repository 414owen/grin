\frametitle{GRIN id-add}
\begin{center}

	\begin{minipage}{0.40\textwidth}
		\begin{haskellcode}
			id q =
			 q' <- eval q
			 pure q'
		\end{haskellcode}
		\begin{haskellcode}
			add x y =
			 (CInt x') <- eval x
			 (CInt y') <- eval y
			 r <- _int_add x' y'
			 pure (CInt r)
		\end{haskellcode}
		\begin{haskellcode}
			eval p = ...
		\end{haskellcode}
		\begin{haskellcode}
			apply f u = ...
		\end{haskellcode}
	\end{minipage}
	\hfill
	%TODO: step-by-step for grinMain
	\begin{minipage}{0.55\textwidth}
		\begin{haskellcode}
			-- id (add 1) 0 ?
		\end{haskellcode}
		\vspace{-0.60cm}
		\pause
		\begin{haskellcode}
		grinMain =
		 zero <- store (CInt 0)
		 one  <- store (CInt 1)

		 add_1 <- store (P1_add one)
		 thunk <- store (Fid add_1)

		 id_add_1 <- eval thunk
		 r <- apply id_add_1 zero

		 (CInt r) <- pure r
		 _prim_int_print r
		\end{haskellcode}
	\end{minipage}

\end{center}
