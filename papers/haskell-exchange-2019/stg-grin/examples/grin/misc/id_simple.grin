-- Haskell code: id id 0

grinMain =
  zero <- store (CInt 0)

  id_partial  <- store (P1_id)
  id_id_thunk <- store (Fid id_partial)

  id_id    <- eval id_id_thunk
  (CInt r) <- apply id_id zero

  _prim_int_print r

eval p =
  v <- fetch p
  case v of
    (CInt n) -> pure v
    (P1_id)  -> pure v
    (Fid x.1) ->
      y <- id x.1
      update p y
      pure y

apply f arg =
  case f of
    (P1_id) -> id arg

id x.0 =
  x.0' <- eval x.0
  pure x.0'
