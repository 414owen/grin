upto m n =
  let cmp = _prim_int_gt m n
  case cmp of
    #True   -> (Nil)
    #False  -> let succ = _prim_int_add m 1
                   tail = upto succ n
               (Cons m tail)

sum l =
  case l of
    (Nil)       -> 0
    (Cons n ns) -> let s = sum ns
                   _prim_int_add n s

main =
  let l = upto 1 100000
      s = sum l
  _prim_int_print s
